// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package io.github.jcagarcia.proof.tests.service.impl;

import io.github.jcagarcia.proof.tests.model.domain.Library;
import io.github.jcagarcia.proof.tests.repository.LibraryRepository;
import io.github.jcagarcia.proof.tests.service.impl.LibraryServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect LibraryServiceImpl_Roo_Service_Impl {
    
    declare @type: LibraryServiceImpl: @Service;
    
    declare @type: LibraryServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private LibraryRepository LibraryServiceImpl.libraryRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param libraryRepository
     */
    @Autowired
    public LibraryServiceImpl.new(LibraryRepository libraryRepository) {
        setLibraryRepository(libraryRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return LibraryRepository
     */
    public LibraryRepository LibraryServiceImpl.getLibraryRepository() {
        return libraryRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param libraryRepository
     */
    public void LibraryServiceImpl.setLibraryRepository(LibraryRepository libraryRepository) {
        this.libraryRepository = libraryRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param library
     */
    @Transactional
    public void LibraryServiceImpl.delete(Library library) {
        getLibraryRepository().delete(library);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Library> LibraryServiceImpl.save(Iterable<Library> entities) {
        return getLibraryRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void LibraryServiceImpl.delete(Iterable<Long> ids) {
        List<Library> toDelete = getLibraryRepository().findAll(ids);
        getLibraryRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Library
     */
    @Transactional
    public Library LibraryServiceImpl.save(Library entity) {
        return getLibraryRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Library
     */
    public Library LibraryServiceImpl.findOne(Long id) {
        return getLibraryRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Library
     */
    public Library LibraryServiceImpl.findOneForUpdate(Long id) {
        return getLibraryRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Library> LibraryServiceImpl.findAll(Iterable<Long> ids) {
        return getLibraryRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Library> LibraryServiceImpl.findAll() {
        return getLibraryRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long LibraryServiceImpl.count() {
        return getLibraryRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Library> LibraryServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getLibraryRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Library> LibraryServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getLibraryRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Library> LibraryServiceImpl.getEntityType() {
        return Library.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> LibraryServiceImpl.getIdType() {
        return Long.class;
    }
    
}
